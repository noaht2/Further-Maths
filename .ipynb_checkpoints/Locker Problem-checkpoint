{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Locker Problem\n",
    "## My Simulation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "01                                                                                                      00\n",
      "02 ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `  50\n",
      "03   ```   ```   ```   ```   ```   ```   ```   ```   ```   ```   ```   ```   ```   ```   ```   ```   `` 50\n",
      "04 ` ``     `` ` ``     `` ` ``     `` ` ``     `` ` ``     `` ` ``     `` ` ``     `` ` ``     `` ` `` 43\n",
      "05   `` `   `  ` `     ``` ````  `  ```` ```     ` `  `   ` ``   `` `   `  ` `     ``` ````  `  ```` `` 47\n",
      "06 ` `` ``  `    `   ` ```  ```     ```  ``` `   `    `  `` `` ` `` ``  `    `   ` ```  ```     ```  `` 46\n",
      "07   `` ``` `        ` ` `  ````    ``   ```     `  ` `  ````` ` `  ``  ``   `  `` ``` ````   ` ```   ` 47\n",
      "08 ` `` `````      ` ` ` ` `````   ```   ``      ` `` `  `` `` ` ` ```  `` ` `  ``  `` `````  ` ````  ` 54\n",
      "09   `` ````       `   ` ` ``` `   ``` ` ``     `` `` `   ` `` ` `````  ``   `  ``   ` ````` `` ````    50\n",
      "10 ` `` ```` `     `     ` ``` ` ` ``` ` ```    `` ````   ` ``   `````  `    `  `` ` ` `````  ` ````    52\n",
      "11   `` ```` ``    `       ``` ` ` ` ` ` ```   ``` ````     ``   ````   `    `   ` ` ` ````   ` ````  ` 48\n",
      "12 ` `` ```` ```   `        `` ` ` ` `   ```   ```  ```     `` ` ````   `  ` `   ` ` `  ```   ` ```   ` 47\n",
      "13   `` ```` ````  `        `  ` ` ` `   ` `   ```  ````    `` ` ```    `  ` `     ` `  ```     ```   ` 43\n",
      "14 ` `` ```` ````` `        `    ` ` `   ` ` ` ```  ````   ``` ` ```    `` ` `     ` ` ````     ```  `` 49\n",
      "15   `` ```` ```````        `      ` `   ` ` ` ` `  ````   ```   ```    `` ` ``    ` ` ````  `  ```  `` 48\n",
      "16 ` `` ```` ``````         `        `   ` ` ` ` ` `````   ```   ``     `` ` ``      ` ````  `  ```` `` 47\n",
      "17   `` ```` `````` `       `            ` ` ` ` ` ``` `   ```   ``    ``` ` ``      ` ` ``  `  ```` `` 45\n",
      "18 ` `` ```` `````` ``      `          ` ` ` ` ` ` ``` ` ` ```   ``    ```   ``      ` ` ``     ```` `` 47\n",
      "19   `` ```` `````` ```     `          `   ` ` ` ` ``` ` ` ` `   ``    ```   ```     ` ` ``     `` ` `` 45\n",
      "20 ` `` ```` `````` ````    `          `     ` ` ` ``` ` ` ` ` ` ``    ```   ```   ` ` ` ``     `` ` `` 48\n",
      "21   `` ```` `````` `````   `          `       ` ` ``` ` ` ` ` ` `     ```   ```   ` `   ``     `` ` `` 45\n",
      "22 ` `` ```` `````` ``````  `          `         ` ``` ` ` ` ` ` `   ` ```   ```   ` `   ```    `` ` `` 48\n",
      "23   `` ```` `````` ``````` `          `           ``` ` ` ` ` ` `   ` ` `   ```   ` `   ```   ``` ` `` 47\n",
      "24 ` `` ```` `````` `````````          `            `` ` ` ` ` ` `   ` ` ` ` ```   ` `   ```   ```   `` 48\n",
      "25   `` ```` `````` ````````           `            `  ` ` ` ` ` `   ` ` ` ` ` `   ` `   ```   ```   `` 44\n",
      "26 ` `` ```` `````` ```````` `         `            `    ` ` ` ` `   ` ` ` ` ` ` ` ` `   ```   ```   `` 46\n",
      "27   `` ```` `````` ```````` ``        `            `      ` ` ` `   ` ` ` ` ` ` ` ```   ```   ```   `` 46\n",
      "28 ` `` ```` `````` ```````` ```       `            `        ` ` `   ` ` ` ` ` ` ` ``` ` ```   ```   `` 48\n",
      "29   `` ```` `````` ```````` ````      `            `          ` `   ` ` ` ` ` ` ` ``` ` ` `   ```   `` 46\n",
      "30 ` `` ```` `````` ```````` `````     `            `            `   ` ` ` ` ` ` ` ``` ` ` ` ` ```   `` 48\n",
      "31   `` ```` `````` ```````` ``````    `            `                ` ` ` ` ` ` ` ``` ` ` ` ` ` `   `` 46\n",
      "32 ` `` ```` `````` ```````` ```````   `            `              ` ` ` ` ` ` ` ` ``` ` ` ` ` ` ` ` `` 50\n",
      "33   `` ```` `````` ```````` ````````  `            `              `   ` ` ` ` ` ` ``` ` ` ` ` ` ` ` `  48\n",
      "34 ` `` ```` `````` ```````` ````````` `            `              `     ` ` ` ` ` ``` ` ` ` ` ` ` ` `  49\n",
      "35   `` ```` `````` ```````` ```````````            `              `       ` ` ` ` ``` ` ` ` ` ` ` ` `  48\n",
      "36 ` `` ```` `````` ```````` ``````````             `              `         ` ` ` ``` ` ` ` ` ` ` ` `  47\n",
      "37   `` ```` `````` ```````` `````````` `           `              `           ` ` ``` ` ` ` ` ` ` ` `  46\n",
      "38 ` `` ```` `````` ```````` `````````` ``          `              `             ` ``` ` ` ` ` ` ` ` `  47\n",
      "39   `` ```` `````` ```````` `````````` ```         `              `               ``` ` ` ` ` ` ` ` `  46\n",
      "40 ` `` ```` `````` ```````` `````````` ````        `              `                `` ` ` ` ` ` ` ` `  47\n",
      "41   `` ```` `````` ```````` `````````` `````       `              `                `  ` ` ` ` ` ` ` `  46\n",
      "42 ` `` ```` `````` ```````` `````````` ``````      `              `                `    ` ` ` ` ` ` `  47\n",
      "43   `` ```` `````` ```````` `````````` ```````     `              `                `      ` ` ` ` ` `  46\n",
      "44 ` `` ```` `````` ```````` `````````` ````````    `              `                `        ` ` ` ` `  47\n",
      "45   `` ```` `````` ```````` `````````` `````````   `              `                `          ` ` ` `  46\n",
      "46 ` `` ```` `````` ```````` `````````` ``````````  `              `                `            ` ` `  47\n",
      "47   `` ```` `````` ```````` `````````` ``````````` `              `                `              ` `  46\n",
      "48 ` `` ```` `````` ```````` `````````` `````````````              `                `                `  47\n",
      "49   `` ```` `````` ```````` `````````` ````````````               `                `                   44\n",
      "50 ` `` ```` `````` ```````` `````````` ```````````` `             `                `                   46\n",
      "51   `` ```` `````` ```````` `````````` ```````````` ``            `                `                   46\n",
      "52 ` `` ```` `````` ```````` `````````` ```````````` ```           `                `                   48\n",
      "53   `` ```` `````` ```````` `````````` ```````````` ````          `                `                   48\n",
      "54 ` `` ```` `````` ```````` `````````` ```````````` `````         `                `                   50\n",
      "55   `` ```` `````` ```````` `````````` ```````````` ``````        `                `                   50\n",
      "56 ` `` ```` `````` ```````` `````````` ```````````` ```````       `                `                   52\n",
      "57   `` ```` `````` ```````` `````````` ```````````` ````````      `                `                   52\n",
      "58 ` `` ```` `````` ```````` `````````` ```````````` `````````     `                `                   54\n",
      "59   `` ```` `````` ```````` `````````` ```````````` ``````````    `                `                   54\n",
      "60 ` `` ```` `````` ```````` `````````` ```````````` ```````````   `                `                   56\n",
      "61   `` ```` `````` ```````` `````````` ```````````` ````````````  `                `                   56\n",
      "62 ` `` ```` `````` ```````` `````````` ```````````` ````````````` `                `                   58\n",
      "63   `` ```` `````` ```````` `````````` ```````````` ```````````````                `                   58\n",
      "64 ` `` ```` `````` ```````` `````````` ```````````` ``````````````                 `                   58\n",
      "65   `` ```` `````` ```````` `````````` ```````````` `````````````` `               `                   58\n",
      "66 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ``              `                   60\n",
      "67   `` ```` `````` ```````` `````````` ```````````` `````````````` ```             `                   60\n",
      "68 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ````            `                   62\n",
      "69   `` ```` `````` ```````` `````````` ```````````` `````````````` `````           `                   62\n",
      "70 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ``````          `                   64\n",
      "71   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````         `                   64\n",
      "72 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ````````        `                   66\n",
      "73   `` ```` `````` ```````` `````````` ```````````` `````````````` `````````       `                   66\n",
      "74 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ``````````      `                   68\n",
      "75   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````     `                   68\n",
      "76 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ````````````    `                   70\n",
      "77   `` ```` `````` ```````` `````````` ```````````` `````````````` `````````````   `                   70\n",
      "78 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ``````````````  `                   72\n",
      "79   `` ```` `````` ```````` `````````` ```````````` `````````````` ``````````````` `                   72\n",
      "80 ` `` ```` `````` ```````` `````````` ```````````` `````````````` `````````````````                   74\n",
      "81   `` ```` `````` ```````` `````````` ```````````` `````````````` ````````````````                    72\n",
      "82 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` `                  74\n",
      "83   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ``                 74\n",
      "84 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ```                76\n",
      "85   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ````               76\n",
      "86 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` `````              78\n",
      "87   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ``````             78\n",
      "88 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ```````            80\n",
      "89   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ````````           80\n",
      "90 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` `````````          82\n",
      "91   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ``````````         82\n",
      "92 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ```````````        84\n",
      "93   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ````````````       84\n",
      "94 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` `````````````      86\n",
      "95   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ``````````````     86\n",
      "96 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ```````````````    88\n",
      "97   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ````````````````   88\n",
      "98 ` `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` `````````````````  90\n",
      "99   `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` `````````````````` 90\n"
     ]
    }
   ],
   "source": [
    "# Python 3.7\n",
    "\n",
    "from typing import Iterator, Sized\n",
    "\n",
    "\n",
    "class Corridor(Iterator, Sized):\n",
    "    def __init__(self, size: int):\n",
    "        # True is open; False is closed\n",
    "        self._doors = [True]*size  # Makes all doors start open\n",
    "        self.day: int\n",
    "\n",
    "    @property\n",
    "    def __len__(self):\n",
    "        return self._doors.__len__\n",
    "\n",
    "    @property\n",
    "    def __getitem__(self):\n",
    "        return self._doors.__getitem__\n",
    "\n",
    "    @property\n",
    "    def __setitem__(self):\n",
    "        return self._doors.__setitem__\n",
    "\n",
    "    def __iter__(self):\n",
    "        # Starts the simulation\n",
    "        self.day = 0\n",
    "        return self\n",
    "\n",
    "    def __next__(self):\n",
    "        # One day of the simulation\n",
    "        self.day += 1\n",
    "        if self.day == len(self):\n",
    "            raise StopIteration\n",
    "        for i in range(0, len(self), self.day):\n",
    "            current = self[i]\n",
    "            self[i] = not current\n",
    "        return self\n",
    "\n",
    "    def __repr__(self):\n",
    "        # For debugging\n",
    "        return f'Corridor({len(self)})'\n",
    "\n",
    "    def __str__(self):\n",
    "        output = ''\n",
    "        for isopen in self._doors:\n",
    "            output += '`' if isopen else ' '\n",
    "            # '`' is open; ' ' is closed\n",
    "        return str(self.day).zfill(2)+\" \"+output+\" \" \\\n",
    "            + str(sum(self._doors)).zfill(2)\n",
    "\n",
    "\n",
    "for day in Corridor(100):\n",
    "    print(day)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Explanation\n",
    "Locker $n$ (starting numbering at $0$) is toggled when the day number is a divisor of $n$.\n",
    "(Except when $n=0$, in which case it is toggled every day.)\n",
    "This means that the amount locker $n$ is toggled is the number of divisors of $n$ and as the lockers start out open, those with an even number of divisors end open and those with an odd number end closed.\n",
    "Code to find which from $1$ to $100$ are these:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  `` ```` `````` ```````` `````````` ```````````` `````````````` ```````````````` ``````````````````"
     ]
    }
   ],
   "source": [
    "def isdivisor(n: int) -> bool:\n",
    "    for i in range(1, n+1):\n",
    "        if n % i == 0:\n",
    "            # i is a divisor of n\n",
    "            yield True\n",
    "        else:\n",
    "            yield False\n",
    "\n",
    "\n",
    "def ndivisors(n: int) -> int:\n",
    "    return sum(isdivisor(n))\n",
    "\n",
    "\n",
    "def even_ndivisors(n: int) -> bool:\n",
    "    return ndivisors(n) % 2 == 0\n",
    "\n",
    "\n",
    "print(' ', end='')  # n=0\n",
    "for n in range(1, 100):\n",
    "    print('`' if even_ndivisors(n) else ' ', end='')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is the same as the bottom row of the visualisation!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "4\n",
      "9\n",
      "16\n",
      "25\n",
      "36\n",
      "49\n",
      "64\n",
      "81\n"
     ]
    }
   ],
   "source": [
    "for n in range(1, 100):\n",
    "    if not even_ndivisors(n):\n",
    "        print(n)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These are square numbers!\n",
    "This is because for most numbers, divisors are in pairs.\n",
    "However, square numbers have an odd number of divisors because $1$ is paired with itself.\n",
    "The first door toggles from on to off each day.\n",
    "$lockers_{open}=0.5+-1^{lockers_{total}+1}\\times0.5+lockers_{total}-squaresLessThan(lockers_{total})$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def is_square(n: int) -> bool:\n",
    "    return n**0.5 % 1 == 0\n",
    "\n",
    "\n",
    "def squareslessthan(n: int) -> int:\n",
    "    for i in range(1, n):\n",
    "        if is_square(i):\n",
    "            yield i\n",
    "\n",
    "\n",
    "def nsquareslessthan(n: int) -> int:\n",
    "    return len(list(squareslessthan(n)))\n",
    "\n",
    "\n",
    "def open_lockers(total_lockers: int) -> int:\n",
    "    return int(total_lockers-(nsquareslessthan(total_lockers)+0.5+(-1)**(total_lockers)*0.5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90\n"
     ]
    }
   ],
   "source": [
    "print(open_lockers(100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$90$!\n",
    "This is the same as my simulation says!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
